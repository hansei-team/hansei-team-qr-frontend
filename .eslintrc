{
  "parser": "@typescript-eslint/parser",
  "extends": ["airbnb", "airbnb/hooks", "prettier"],
  "plugins": ["prettier", "import", "@typescript-eslint"],
  "rules": {
    "prettier/prettier": ["error", { "endOfLine": "auto" }],
    "arrow-body-style": ["error", "as-needed"],
    "global-require": "off",
    "linebreak-style": "off",
    "no-return-await": "off",
    "no-unused-vars": "warn",
    "import/export": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["vite.config.ts"]
      }
    ],
    "import/no-unresolved": "error",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling"],
        "pathGroups": [
          {
            "pattern": "{react*,react*/**}",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/prefer-default-export": "off",
    "jsx-a11y/label-has-associated-control": [
      "error",
      { "controlComponents": ["input", "select"] }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".tsx", ".jsx"]
      }
    ],
    "react/jsx-props-no-spreading": "warn",
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn"
  },
  "settings": {
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx", ".d.ts", ".js", ".jsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "env": {
    "browser": true
  },
  "globals": {
    "JSX": true
  }
}
